# events {}

# http {

#     server {
#         listen 80;
#         # listen [::]:80
#         server_name soriconnct.com www.soriconnct.com;
#         location /.well-known/acme-challenge/ {
#             root /var/www/certbot;
#         }

#         location / {
#             return 301 https://$host$request_uri;
#         } 
#     }

#     server {
#         listen 443 ssl;
#         server_name soriconnct.com www.soriconnct.com;

#         ssl_certificate /etc/letsencrypt/live/soriconnct.com/fullchain.pem;
#         ssl_certificate_key /etc/letsencrypt/live/soriconnct.com/privkey.pem;

#         ssl_protocols TLSv1.2 TLSv1.3;
#         ssl_prefer_server_ciphers on;

#         location /api {
#             proxy_pass http://app:4040;
#             proxy_set_header Host $host;
#             proxy_set_header X-Real-IP $remote_addr;
#             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#             proxy_set_header X-Forwarded-Proto $scheme;
#         }

#         location / {
#             proxy_pass http://angular:4500;
#             proxy_set_header Host $host;
#             proxy_set_header X-Real-IP $remote_addr;
#             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#             proxy_set_header X-Forwarded-Proto $scheme;
#         }

#     }
# }
events {}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # HTTP server (redirect to HTTPS)
    server {
        listen 80;
        server_name localhost;

        # Redirect all HTTP requests to HTTPS
        return 301 https://$host$request_uri;
    }

    # HTTPS server
    server {
        listen 443 ssl;
        server_name localhost;

        # SSL configuration
        ssl_certificate /etc/nginx/certs/localhost.crt;
        ssl_certificate_key /etc/nginx/certs/localhost.key;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on;

        # Angular application
        location / {
            proxy_pass http://angular:4500;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Backend API
        location /api {
            proxy_pass http://app:4040;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}